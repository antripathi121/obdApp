{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappings":"AAAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nexport interface BatteryStatusResponse {\n    /**\n     * The battery charge percentage\n     */\n    level: number;\n    /**\n     * A boolean that indicates whether the device is plugged in\n     */\n    isPlugged: boolean;\n}\n/**\n * @name Battery Status\n * @description\n * Requires Cordova plugin: cordova-plugin-batterystatus. For more info, please see the [BatteryStatus plugin docs](https://github.com/apache/cordova-plugin-battery-status).\n *\n * @usage\n * ```typescript\n * import { BatteryStatus } from '@ionic-native/battery-status/ngx';\n *\n * constructor(private batteryStatus: BatteryStatus) { }\n *\n * ...\n *\n *\n * // watch change in battery status\n * const subscription = this.batteryStatus.onChange().subscribe(status => {\n *    console.log(status.level, status.isPlugged);\n * });\n *\n * // stop watch\n * subscription.unsubscribe();\n *\n * ```\n * @interfaces\n * BatteryStatusResponse\n */\nexport declare class BatteryStatus extends IonicNativePlugin {\n    /**\n     * Watch the change in battery level\n     * @returns {Observable<BatteryStatusResponse>} Returns an observable that pushes a status object\n     */\n    onChange(): Observable<BatteryStatusResponse>;\n    /**\n     * Watch when the battery level goes low\n     * @returns {Observable<BatteryStatusResponse>} Returns an observable that pushes a status object\n     */\n    onLow(): Observable<BatteryStatusResponse>;\n    /**\n     * Watch when the battery level goes to critical\n     * @returns {Observable<BatteryStatusResponse>} Returns an observable that pushes a status object\n     */\n    onCritical(): Observable<BatteryStatusResponse>;\n}\n"]}